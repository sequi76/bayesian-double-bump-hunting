//
//  this script is converted to executable through
//  g++ lhe-analyzer.cpp -o lhe-analyzer.exe
//
//I'm asking only to have 1 l+, 1l- and 1 b jet and at least one extra jet, also asks eta for both leptons and b to be less than 2.5. It identifies the leading extra jet.
// Also counts the events with Deltaeta and DeltapT both >0 and the events with Deltaeta and DeltapT both <0. Finally it gives the acceptance, the N+ and the N-.

#include <iostream>
#include <fstream>
#include <string>
#include <string.h>
#include <sstream>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

using namespace std;

double eta(double *p1)
{
        double yy, pabs=sqrt(p1[1]*p1[1]+p1[2]*p1[2]+p1[3]*p1[3]);
        yy = log((pabs+p1[3])/(pabs-p1[3]))/2.0;
        return yy;


}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////

double pt(double *p)
{
        return sqrt(p[1]*p[1] + p[2]*p[2]);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////

double invmass(double * p1, double *p2)
{
   double ptot[4];
   ptot[0] = p1[0] + p2[0];
   ptot[1] = p1[1] + p2[1];
   ptot[2] = p1[2] + p2[2];
   ptot[3] = p1[3] + p2[3];
   return sqrt(ptot[0]*ptot[0] - ptot[1]*ptot[1] - ptot[2]*ptot[2] - ptot[3]*ptot[3]);
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////



int main(int argc, char* argv[])
{
  char line[1000], buff[30];
  char filename[200];
  stringstream ss;
  int endnow=0, i;
  double f[30];
////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////        DEFINE VARIABLES TO USE  //////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
double l1[4], l2[4], b1[4], met[4]; 
int pass=0, total=0, nj=0, nb=0, nlp=0, nlm=0;

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

 
  std::ifstream datafile;
  datafile.open(argv[1],ios::in);

cout << "[[" ;

  //find the line containing the first "<event>"
 while(!(strstr(line,"jmas   ntrk   btag")))
  {
    datafile.getline(line,999);
  }
    datafile.getline(line,999);


  //analyze each event
        while(1)
	{
		while(datafile.getline(line,999))
         	{
		//if (datafile.eof()) break;
//		if (strstr(line,"</event>")) break;
//		ss.str( "" );
		ss.clear();
		ss << line;
		f[0]=0;
		while((ss >> buff)) {f[0]++; f[(int)f[0]] = atof( buff );}
////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////      TO DO IN EACH LINE    //////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
// usage:
// f[0] =  number of fields in the line
// f[i] =  float value of the i-th field in the line (i=1 ... f[0])
//
if (f[0] > 5){
cout  << "[";
for ( i=1; i<(int)f[0] ; i++) {
	cout << f[i] << ", "   ;
}
if (f[2]==6) {
cout << f[i] << "]"  ;
}
else 
{
cout << f[i] << "],"  ;
}
}
//READ! Each vector contains, in this order: eta phi pt jmas

////////////////////////////////////////////////////////////////////////////////////////////////////
		if ( f[2] == 6 ) break;
////////////////////////////////////////////////////////////////////////////////////////////////////
		}
////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////        TO DO AFTER EACH EVENT    /////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
    if (datafile.eof()) {endnow=1;break;}
printf("],[ ");
}
////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////        TO DO AT THE END    /////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
        

printf("]]");



////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////





  datafile.close();




return 1;
}
